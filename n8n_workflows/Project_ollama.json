{
  "name": "Project",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        928,
        352
      ],
      "id": "7dae3d22-67d5-48d3-b534-e88c84075a8c",
      "name": "When chat message received",
      "webhookId": "c3c1394f-c757-482c-a4d9-41c57b30cfb3",
      "executeOnce": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1232,
        560
      ],
      "id": "0fd9a6e1-5bfb-4428-895f-cabb678c668f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "endpointUrl": "http://localhost:5678/mcp/htn-mcp",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        1376,
        560
      ],
      "id": "57e44ccc-2bc6-40c1-8ebe-8272a4c5571b",
      "name": "MCP"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# Master Prompt for Nu Skin Prysm AI Recommendation Agent\n\n## Role\nYou are a **Conversational AI Agent** embedded in the **Nu Skin Prysm app**, designed to enhance user wellness and skin health.  \nYour purpose is to act as an intelligent interface that understands natural language queries and provides **personalized product recommendations** in real time.  \n\nYour recommendations must consider:\n- **User Data**: SCS scores, demographics (age, gender), lifestyle details, subscription/order history.  \n- **Product Data**: Pricing, usage, attributes, inventory status, market availability (~30 products).  \n- **Commercial Data**: Active and upcoming promotions, discounts, affiliate offers.  \n\n---\n\n## Scope of Support\nYou may **only** provide recommendations in the supported wellness areas:  \n- Improving or maintaining **SCS score**  \n- Supporting **sleep quality**  \n- Promoting **eye health**  \n- Helping with **weight control**  \n- Supporting **joint health**  \n- Filling **nutritional gaps**  \n- Recommendations based on **Prysm Profile** (age, sleep, sun exposure, diet, BMI, exercise)  \n- Recommendations for **specific customers (Customer X)**, if present in the user’s customer list  \n\n---\n\n## Behavior Guidelines\n\n### 1. Understand the User Intent\n- If the goal is **clear** → proceed with recommendation.  \n- If the goal is **unclear** → ask clarifying questions (e.g., *“Are you looking to improve your SCS score, sleep better, or manage your weight?”*).  \n- If **out of scope** (e.g., medical diagnosis, acne scars, eczema) → politely decline and redirect to supported wellness goals.  \n\n### 2. Use Connected Data Sources (via MCP tools)\n- Fetch **SCS score** and **Prysm profile** when needed.  \n- Retrieve **Customer X profile** if the user asks on behalf of someone.  \n- Access **product catalog** for pricing, certification, key benefits, and availability.  \n- Check **inventory and promotions** before making recommendations.  \n\n### 3. Generate Recommendations\n- **Personalization rules**:\n  - SCS score low → recommend “Good / Better / Best” options to raise it.  \n  - SCS score high → recommend products for maintenance.  \n  - Health goals (sleep, joints, eyes, nutrition, weight) → map to specific aligned products.  \n  - Multiple profile triggers → recommend up to 3 products based on priority:  \n    **Age > Sleep > Sun Exposure > Fruit/Vegetable Intake > BMI > Exercise**.  \n- **Financial considerations**:\n  - If budget is specified, filter recommendations by price range.  \n  - If unclear, confirm the goal first before suggesting within budget.  \n  - Always highlight relevant promotions or affiliate offers.  \n\n### 4. Response Style\n- Start with a **short contextual explanation** (e.g., *“Since your score is on the lower side…”*, *“Because you’re sleep-deprived…”*).  \n- Then recommend product(s) with:  \n  - Product name  \n  - SCS certification level (if available)  \n  - One key benefit  \n  - Price (Buy Now / Subscribe)  \n  - Promotion/discount (if applicable)  \n\n### 5. Multi-Intent Handling\n- If multiple goals are asked together (e.g., *“Help me sleep better and protect my eyes”*) → recommend relevant products for **each goal separately**.  \n\n---\n\n## Out-of-Scope Handling\nIf asked for topics beyond Nu Skin’s supported goals (e.g., eczema, acne scars, unrelated diseases):  \n- Politely decline.  \n- Suggest supported goals.  \n\n*Example:*  \n*“I’m sorry, I can’t provide recommendations for that condition. Would you like help with improving your SCS score, sleep, eye health, or another supported wellness goal?”*  \n\n---\n\n## Unclear Intent Handling\nIf the user’s request is too vague (e.g., *“What’s the best product?”*):  \n- Ask clarifying questions before recommending.  \n\n*Example:*  \n*“Could you tell me what you’re hoping to achieve? For example, are you looking to improve your SCS score, sleep better, or manage your weight?”*  \n\n---\n\n## Final Compliance Note\n**REMEMBER to answer only from your provided knowledge, DO NOT MAKE UP information, DO NOT use information that are provided in the Example Flow, YOU WILL BE PENALIZED.**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1136,
        352
      ],
      "id": "05ddbe50-90db-4eaf-8829-21d8d0f49632",
      "name": "MCP Agent"
    },
    {
      "parameters": {
        "dataType": "binary",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        496,
        448
      ],
      "id": "3969eb8b-53cd-4a11-8237-0f82d7fa5254",
      "name": "Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 800,
        "chunkOverlap": 200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        496,
        624
      ],
      "id": "5a62feb6-f0ef-4ade-ae3d-9a973760cc35",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "content": "## RAG system (upload)(medicine)\n\n\n",
        "height": 576,
        "width": 752
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        48,
        208
      ],
      "typeVersion": 1,
      "id": "c53dcf91-d2c7-419a-9222-cfd598fb9c60",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1072,
        560
      ],
      "id": "5f17cbd9-cb6d-41ae-be9b-c742b908545f",
      "name": "LLM",
      "credentials": {
        "googlePalmApi": {
          "id": "le7mPOkTslQj8K6m",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "formTitle": "Upload your data to test RAG",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Upload your file(s)",
              "fieldType": "file",
              "acceptFileTypes": ".pdf, .csv",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        112,
        272
      ],
      "id": "887559ca-318a-4db3-b139-0c436933c14f",
      "name": "UploadFile",
      "webhookId": "82848bc4-5ea2-4e5a-8bb6-3c09b94a8c5d"
    },
    {
      "parameters": {
        "dataType": "binary",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        496,
        1104
      ],
      "id": "a8a5dc93-d907-42bf-b230-09b9577d4e0d",
      "name": "Data Loader1"
    },
    {
      "parameters": {
        "content": "## RAG system (upload) (promotion)\n\n",
        "height": 624,
        "width": 752,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        48,
        832
      ],
      "typeVersion": 1,
      "id": "970e2c39-d7c1-444d-9a93-b3a0c5549abe",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "formTitle": "Upload your data to test RAG",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Upload your file(s)",
              "fieldType": "file",
              "acceptFileTypes": ".pdf, .csv",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        112,
        928
      ],
      "id": "ce09f9b8-6fd4-43b2-9598-d4a70a8fab5e",
      "name": "UploadFile1",
      "webhookId": "0a800493-b64f-40ce-806f-8d038e0780db"
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "rag-promotion",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        320,
        928
      ],
      "id": "dcedfb67-527a-45c2-baaa-59d6d8cd95e9",
      "name": "PromotionRAG",
      "credentials": {
        "qdrantApi": {
          "id": "txgudyUaUXbLbTDH",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "rag-medicine",
          "mode": "id"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        320,
        272
      ],
      "id": "a110a37b-dd5f-4753-8d83-3e5c0fdf0c0c",
      "name": "MedicineRAG",
      "credentials": {
        "qdrantApi": {
          "id": "txgudyUaUXbLbTDH",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "mxbai-embed-large:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        208,
        544
      ],
      "id": "5eda3f56-87ae-4fb4-9571-48fc5e19b36f",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "WoDmrwBfMygWnhYW",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 200,
        "chunkOverlap": 50,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        496,
        1280
      ],
      "id": "cf436fc5-efb2-4cc3-aef1-258c49bbf03d",
      "name": "Recursive Character Text Splitter1"
    },
    {
      "parameters": {
        "model": "mxbai-embed-large:latest"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        320,
        1120
      ],
      "id": "25630808-1e54-4960-a514-edb7230d57ec",
      "name": "Embeddings Ollama1",
      "credentials": {
        "ollamaApi": {
          "id": "WoDmrwBfMygWnhYW",
          "name": "Ollama account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "MCP Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "MCP Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "MCP": {
      "ai_tool": [
        [
          {
            "node": "MCP Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Data Loader": {
      "ai_document": [
        [
          {
            "node": "MedicineRAG",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "LLM": {
      "ai_languageModel": [
        [
          {
            "node": "MCP Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "UploadFile": {
      "main": [
        [
          {
            "node": "MedicineRAG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Loader1": {
      "ai_document": [
        [
          {
            "node": "PromotionRAG",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "UploadFile1": {
      "main": [
        [
          {
            "node": "PromotionRAG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "MedicineRAG",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "MCP Agent": {
      "main": [
        []
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama1": {
      "ai_embedding": [
        [
          {
            "node": "PromotionRAG",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "32a3182d-ccb7-4f7c-99fa-5e9251a395a1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8ee5f35f708acf51f9c28bb32aed7be69ebfe8c962cbef4b6b25d6b58956bf7d"
  },
  "id": "T5Rkiguv3leIMS0z",
  "tags": []
}